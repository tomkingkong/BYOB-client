// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WineForm should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WineForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          Add New Wine
        </h1>,
        <input
          id="wine_name"
          maxLength="26"
          name="name"
          onChange={[Function]}
          placeholder="Wine Name"
          required={true}
          type="text"
          value=""
        />,
        <input
          id="grape_type"
          name="grape_type"
          onChange={[Function]}
          placeholder="Grape Type"
          type="text"
          value=""
        />,
        <input
          id="color"
          maxLength="5"
          name="color"
          onChange={[Function]}
          placeholder="Wine Color"
          type="text"
          value=""
        />,
        <input
          id="production_id"
          maxLength="4"
          name="production_year"
          onChange={[Function]}
          placeholder="Year"
          type="number"
          value=""
        />,
        <input
          id="score"
          maxLength="3"
          name="score"
          onChange={[Function]}
          placeholder="Score"
          type="number"
          value=""
        />,
        <input
          id="price"
          name="price"
          onChange={[Function]}
          placeholder="Price"
          type="text"
          value=""
        />,
        <button>
          +
        </button>,
      ],
      "className": "WineForm",
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Add New Wine",
        },
        "ref": null,
        "rendered": "Add New Wine",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "id": "wine_name",
          "maxLength": "26",
          "name": "name",
          "onChange": [Function],
          "placeholder": "Wine Name",
          "required": true,
          "type": "text",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "id": "grape_type",
          "name": "grape_type",
          "onChange": [Function],
          "placeholder": "Grape Type",
          "type": "text",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "id": "color",
          "maxLength": "5",
          "name": "color",
          "onChange": [Function],
          "placeholder": "Wine Color",
          "type": "text",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "id": "production_id",
          "maxLength": "4",
          "name": "production_year",
          "onChange": [Function],
          "placeholder": "Year",
          "type": "number",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "id": "score",
          "maxLength": "3",
          "name": "score",
          "onChange": [Function],
          "placeholder": "Score",
          "type": "number",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "id": "price",
          "name": "price",
          "onChange": [Function],
          "placeholder": "Price",
          "type": "text",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "+",
        },
        "ref": null,
        "rendered": "+",
        "type": "button",
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            Add New Wine
          </h1>,
          <input
            id="wine_name"
            maxLength="26"
            name="name"
            onChange={[Function]}
            placeholder="Wine Name"
            required={true}
            type="text"
            value=""
          />,
          <input
            id="grape_type"
            name="grape_type"
            onChange={[Function]}
            placeholder="Grape Type"
            type="text"
            value=""
          />,
          <input
            id="color"
            maxLength="5"
            name="color"
            onChange={[Function]}
            placeholder="Wine Color"
            type="text"
            value=""
          />,
          <input
            id="production_id"
            maxLength="4"
            name="production_year"
            onChange={[Function]}
            placeholder="Year"
            type="number"
            value=""
          />,
          <input
            id="score"
            maxLength="3"
            name="score"
            onChange={[Function]}
            placeholder="Score"
            type="number"
            value=""
          />,
          <input
            id="price"
            name="price"
            onChange={[Function]}
            placeholder="Price"
            type="text"
            value=""
          />,
          <button>
            +
          </button>,
        ],
        "className": "WineForm",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Add New Wine",
          },
          "ref": null,
          "rendered": "Add New Wine",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "id": "wine_name",
            "maxLength": "26",
            "name": "name",
            "onChange": [Function],
            "placeholder": "Wine Name",
            "required": true,
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "id": "grape_type",
            "name": "grape_type",
            "onChange": [Function],
            "placeholder": "Grape Type",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "id": "color",
            "maxLength": "5",
            "name": "color",
            "onChange": [Function],
            "placeholder": "Wine Color",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "id": "production_id",
            "maxLength": "4",
            "name": "production_year",
            "onChange": [Function],
            "placeholder": "Year",
            "type": "number",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "id": "score",
            "maxLength": "3",
            "name": "score",
            "onChange": [Function],
            "placeholder": "Score",
            "type": "number",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "id": "price",
            "name": "price",
            "onChange": [Function],
            "placeholder": "Price",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "+",
          },
          "ref": null,
          "rendered": "+",
          "type": "button",
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
